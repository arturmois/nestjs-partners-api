// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum SpotStatus {
  available
  reserved
}

enum TicketKind {
  full
  half
}

enum TicketStatus {
  reserved
  canceled
}

model Event {
  id          String   @id @default(uuid())
  name        String
  description String
  date        DateTime
  price       Float
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  spot        Spot[]

  @@map("events")
}

model Spot {
  id         String     @id @default(uuid())
  name       String
  status     SpotStatus @default(available)
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt

  event               Event                @relation(fields: [event_id], references: [id])
  event_id            String
  ticket              Ticket?
  reservation_history ReservationHistory[]

  @@map("spots")
}

model Ticket {
  id          String     @id @default(uuid())
  email       String
  ticket_kind TicketKind
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt

  spot    Spot   @relation(fields: [spot_id], references: [id])
  spot_id String @unique

  @@map("tickets")
}

model ReservationHistory {
  id          String       @id @default(uuid())
  email       String
  ticket_kind TicketKind
  status      TicketStatus
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt

  spot    Spot   @relation(fields: [spot_id], references: [id])
  spot_id String @unique

  @@map("reservation_historys")
}
